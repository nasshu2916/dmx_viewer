// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/nasshu2916/dmx_viewer/internal/config"
	"github.com/nasshu2916/dmx_viewer/internal/handler/http"
	"github.com/nasshu2916/dmx_viewer/internal/infrastructure"
	"github.com/nasshu2916/dmx_viewer/internal/usecase"
	"github.com/nasshu2916/dmx_viewer/pkg/logger"
)

// Injectors from wire.go:

func InitializeTimeHandler(logger2 logger.Logger) (*http.TimeHandler, error) {
	timeRepositoryImpl := infrastructure.NewTimeRepositoryImpl()
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	timeUseCaseImpl := usecase.NewTimeUseCaseImpl(timeRepositoryImpl, configConfig, logger2)
	timeHandler := http.NewTimeHandler(timeUseCaseImpl)
	return timeHandler, nil
}
